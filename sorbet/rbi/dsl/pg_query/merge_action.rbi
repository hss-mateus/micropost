# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `PgQuery::MergeAction`.
# Please instead update this file by running `bin/tapioca dsl PgQuery::MergeAction`.

class PgQuery::MergeAction
  sig do
    params(
      command_type: T.nilable(T.any(Symbol, Integer)),
      matched: T.nilable(T::Boolean),
      override: T.nilable(T.any(Symbol, Integer)),
      qual: T.nilable(PgQuery::Node),
      target_list: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node])),
      update_colnos: T.nilable(T.any(Google::Protobuf::RepeatedField[PgQuery::Node], T::Array[PgQuery::Node]))
    ).void
  end
  def initialize(command_type: nil, matched: nil, override: nil, qual: nil, target_list: Google::Protobuf::RepeatedField.new(:message, PgQuery::Node), update_colnos: Google::Protobuf::RepeatedField.new(:message, PgQuery::Node)); end

  sig { void }
  def clear_command_type; end

  sig { void }
  def clear_matched; end

  sig { void }
  def clear_override; end

  sig { void }
  def clear_qual; end

  sig { void }
  def clear_target_list; end

  sig { void }
  def clear_update_colnos; end

  sig { returns(T.any(Symbol, Integer)) }
  def command_type; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def command_type=(value); end

  sig { returns(T::Boolean) }
  def matched; end

  sig { params(value: T::Boolean).void }
  def matched=(value); end

  sig { returns(T.any(Symbol, Integer)) }
  def override; end

  sig { params(value: T.any(Symbol, Integer)).void }
  def override=(value); end

  sig { returns(T.nilable(PgQuery::Node)) }
  def qual; end

  sig { params(value: T.nilable(PgQuery::Node)).void }
  def qual=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def target_list; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def target_list=(value); end

  sig { returns(Google::Protobuf::RepeatedField[PgQuery::Node]) }
  def update_colnos; end

  sig { params(value: Google::Protobuf::RepeatedField[PgQuery::Node]).void }
  def update_colnos=(value); end
end
